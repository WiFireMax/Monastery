#include <time.h>
#include <iostream>
using namespace std;
const int X = 0;
//алгоритм Дейкстры
void func(int GR[20][20], int st)
{
	int distance[20], count, index, i, u, m = st+1;
	bool visited[20];
	for (i = 0; i < 20; i++)
	{
		distance[i] = INT_MAX;
		visited[i] = false;
	}
	distance[st] = 0;
	for (count = 0; count < 20 - 1; count++)
	{
		int min = INT_MAX;
		for (i = 0; i < 20; i++)
			if (!visited[i] && distance[i] <= min)
			{
				min = distance[i];
				index = i;
			}
		u = index;
		visited[u] = true;
		for (i = 0; i < 20; i++)
			if (!visited[i] && GR[u][i] && distance[u] != INT_MAX && distance[u] + GR[u][i] < distance[i])
			{
				distance[i] = distance[u] + GR[u][i];
			}
	}
	cout << "Стоимость пути из начальной вершины до остальных:\t\n";
	for (i = 0; i < 20; i++) if (distance[i] != INT_MAX)
		cout << m << " > " << i + 1 << " = " << distance[i] << endl;
	else cout << m << " > " << i + 1 << " = " << "маршрут недоступен" << endl;
}
//главная функция
void main()
{
	setlocale(LC_ALL, "Rus");

	int start;
	int	GR[20][20] = {
	{X,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,X,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,X,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,X,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,X,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,X,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,X,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,X,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,X,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,X,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,X,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,X,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,X,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,X,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,X,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,X,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,X,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,X,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,X,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,X} };

	srand(time(NULL));

	for (int i = 0; i < 20; i++)
	{
		for (int k = 0; k < 20; k++)
		{
			GR[i][k] = rand() % 2;
			GR[k][i] = GR[i][k];
			if (i == k)
			{
				GR[i][k] = 0;
			}
		}
	}

	for (int i = 0; i < 20; i++)
	{
		for (int k = 0; k < 20; k++)
		{
			cout << "{" << GR[i][k] << "} ";
		}
		cout << endl;
	}

	cout << endl;
	cout << "Начальная вершина >> "; 
	cin >> start;
	func(GR, start-1);
}
